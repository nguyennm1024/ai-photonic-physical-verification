# AI Photonic Physical Verification - .gitignore

# =============================================================================
# Python
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  - .idea/
#  - *.iml
#  - *.ipr
#  - *.iws
.idea/
*.iml
*.ipr
*.iws

# =============================================================================
# Project-Specific Files
# =============================================================================

# Generated GDS and SVG files
*.gds
*.GDS
*.svg
*.SVG

# Generated tile files and directories
tiles/
tiles_*/
tile_*.png
tile_*.svg

# Temporary files created during processing
temp_*.svg
temp_*.png
temp_*.html
*.tmp
*.temp

# Cache directories
.cache/
cache/
tile_cache/

# Analysis results and exports
analysis_results/
results/
exports/
*.json

# Original layout images
original_*.png
layout_*.png

# ROI (Region of Interest) data
roi_data/
roi_*.json

# =============================================================================
# System Files
# =============================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================================================
# Development and IDE Files
# =============================================================================

# VSCode
.vscode/
*.code-workspace

# Cursor IDE
.cursor/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =============================================================================
# Logs and Debug Files
# =============================================================================

# Application logs
*.log
logs/
debug.log
error.log

# Debug output
debug_*.txt
debug_*.log

# Performance profiling
*.prof
*.profile

# =============================================================================
# AI and Model Files
# =============================================================================

# AI model cache and data
ai_cache/
model_cache/
*.model
*.pkl
*.pickle

# API keys and sensitive data
.env.local
.env.production
.env.staging
secrets/
credentials/
api_keys.txt

# =============================================================================
# Documentation and Build Artifacts
# =============================================================================

# Documentation builds
docs/build/
docs/_build/
site/

# Build artifacts
build/
dist/
*.tar.gz
*.zip

# =============================================================================
# Testing and Coverage
# =============================================================================

# Test data and fixtures
test_data/
test_files/
fixtures/
*.test
*.test.*

# Coverage reports
.coverage
coverage.xml
htmlcov/

# =============================================================================
# Backup and Archive Files
# =============================================================================

# Backup files
*.bak
*.backup
*.old
*.orig
*.save

# Archive files
*.zip
*.tar
*.tar.gz
*.rar
*.7z

# =============================================================================
# Large Data Files
# =============================================================================

# Large image files (keep small samples)
*.png
*.jpg
*.jpeg
*.tiff
*.tif
*.bmp
*.gif

# Large data files
*.csv
*.xlsx
*.xls
*.db
*.sqlite
*.sqlite3

# =============================================================================
# Configuration Overrides
# =============================================================================

# Local configuration overrides
config.local.py
settings.local.py
local_config.json

# User-specific settings
user_settings.json
personal_config.py

# =============================================================================
# Documentation and Planning Files
# =============================================================================

# Function analysis and implementation planning documents
functions_understanding.md
implementation_plan.md
PHASE_1_SUMMARY.md

# =============================================================================
# Redundant Documentation Files
# =============================================================================

# Refactoring documentation (temporary files)
REFACTORING_DESIGN.md
REFACTORING_PROGRESS.md
REFACTORING_COMPLETE.md
REFACTORING_ISSUES.md
FIX_PLAN.md
CORRECT_WORKFLOW.md
IMPROVEMENTS_MADE.md
ERRORS_FIXED.md
STATUS.md

# UI documentation (temporary files)
UI_IMPROVEMENTS.md
UI_REORGANIZATION.md
BEFORE_AFTER_UI.md

# Installation documentation (consolidated into INSTALLATION.md)
INSTALLATION_CHECKLIST.md
INSTALLATION_NOTES_SUMMARY.md
DOCUMENTATION_STRUCTURE.md
INSTALLATION_REORGANIZATION_SUMMARY.md

# Test result documentation (temporary files)
TEST_RESULTS.md

# =============================================================================
# Old/Backup Files
# =============================================================================

# Original monolithic application (backup)
layout_verification_app_OLD.py

# Generated SVG files (should be regenerated)
1Kpolyg_layout.svg
Nexus_Sample2_layout.svg

# =============================================================================
# Test Files (Development Only)
# =============================================================================

# Unit test files (keep for development, but can be ignored if not needed)
test_modules.py
test_event_handlers.py
test_integration.py
test_real_gds.py
test_ui_components.py

# =============================================================================
# Unused UI Components
# =============================================================================

# Old UI components that are no longer used
ui/components/roi_controls.py
ui/components/tile_viewer.py

# Empty handler directories
ui/handlers/
ui/styles/
